apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
  - name: kafka-controller
    port: 9093
    targetPort: 9093
  selector:
    app: kafka-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-app
  name: kafka
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-app
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: kafka
        image: bitnami/kafka:3.6
        imagePullPolicy: Always
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: controller,broker
        - name: KAFKA_CFG_LISTENERS
          value: PLAINTEXT://:9092,CONTROLLER://:9093
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: 0@kafka:9093
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: CONTROLLER
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          exec:
            command:
            - kafka-topics.sh
            - --bootstrap-server=kafka:9092
            - --list
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /bitnami
          name: kafka-data
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data
